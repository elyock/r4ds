---
title: "Chapter 3"
author: "Kevin J. Coyle"
format: gfm
editor: visual
---

```{r}
#| label: setup

library(nycflights13)
library(tidyverse)
```

#### 3.2.5 Exercises

1.  In a single pipeline for each condition, find all flights that meet the condition:
    -   Had an arrival delay of two or more hours
    -   Flew to Houston (`IAH` or `HOU`)
    -   Were operated by United, American, or Delta
    -   Departed in summer (July, August, and September)
    -   Arrived more than two hours late, but didn’t leave late
    -   Were delayed by at least an hour, but made up over 30 minutes in flight

```{r}
flights |>
  filter(arr_delay >= 2)
flights |>
  filter(dest %in% c("IAH", "HOU"))
flights |>
  filter(carrier %in% c("UA", "AA", "DL"))
flights |>
  filter(month %in% 7:9)
flights |>
  filter(arr_delay > 120 & dep_delay <= 0)
flights |>
  filter(dep_delay >= 60 & (dep_delay - arr_delay) > 30)
```

2.  Sort `flights` to find the flights with longest departure delays. Find the flights that left earliest in the morning.

This question makes sense to me only if it's two separate sorts.

```{r}
flights |>
  arrange(desc(dep_delay))
flights |>
  arrange(dep_time)
```

3.  Sort `flights` to find the fastest flights.

```{r}
flights |>
  arrange(desc(distance / air_time))
```

4.  Was there a flight on every day of 2013?

```{r}
flights |>
  distinct(month,day) |>
  count()
```

5.  Which flights traveled the farthest distance? Which traveled the least distance?

```{r}
flights |>
  arrange(desc(distance))
flights |>
  arrange(distance)
```

6.  Does it matter what order you used [`filter()`](https://dplyr.tidyverse.org/reference/filter.html) and [`arrange()`](https://dplyr.tidyverse.org/reference/arrange.html) if you’re using both? Why/why not? Think about the results and how much work the functions would have to do.

Use `filter()` first to reduce the amount of data that `arrange()` must sort.
